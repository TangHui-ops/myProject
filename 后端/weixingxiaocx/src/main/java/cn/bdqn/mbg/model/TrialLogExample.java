package cn.bdqn.mbg.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TrialLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public TrialLogExample(Class<TrialLog> trialLogClass) {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTrialIdIsNull() {
            addCriterion("trial_id is null");
            return (Criteria) this;
        }

        public Criteria andTrialIdIsNotNull() {
            addCriterion("trial_id is not null");
            return (Criteria) this;
        }

        public Criteria andTrialIdEqualTo(Integer value) {
            addCriterion("trial_id =", value, "trialId");
            return (Criteria) this;
        }

        public Criteria andTrialIdNotEqualTo(Integer value) {
            addCriterion("trial_id <>", value, "trialId");
            return (Criteria) this;
        }

        public Criteria andTrialIdGreaterThan(Integer value) {
            addCriterion("trial_id >", value, "trialId");
            return (Criteria) this;
        }

        public Criteria andTrialIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("trial_id >=", value, "trialId");
            return (Criteria) this;
        }

        public Criteria andTrialIdLessThan(Integer value) {
            addCriterion("trial_id <", value, "trialId");
            return (Criteria) this;
        }

        public Criteria andTrialIdLessThanOrEqualTo(Integer value) {
            addCriterion("trial_id <=", value, "trialId");
            return (Criteria) this;
        }

        public Criteria andTrialIdIn(List<Integer> values) {
            addCriterion("trial_id in", values, "trialId");
            return (Criteria) this;
        }

        public Criteria andTrialIdNotIn(List<Integer> values) {
            addCriterion("trial_id not in", values, "trialId");
            return (Criteria) this;
        }

        public Criteria andTrialIdBetween(Integer value1, Integer value2) {
            addCriterion("trial_id between", value1, value2, "trialId");
            return (Criteria) this;
        }

        public Criteria andTrialIdNotBetween(Integer value1, Integer value2) {
            addCriterion("trial_id not between", value1, value2, "trialId");
            return (Criteria) this;
        }

        public Criteria andMissionIdIsNull() {
            addCriterion("mission_id is null");
            return (Criteria) this;
        }

        public Criteria andMissionIdIsNotNull() {
            addCriterion("mission_id is not null");
            return (Criteria) this;
        }

        public Criteria andMissionIdEqualTo(Integer value) {
            addCriterion("mission_id =", value, "missionId");
            return (Criteria) this;
        }

        public Criteria andMissionIdNotEqualTo(Integer value) {
            addCriterion("mission_id <>", value, "missionId");
            return (Criteria) this;
        }

        public Criteria andMissionIdGreaterThan(Integer value) {
            addCriterion("mission_id >", value, "missionId");
            return (Criteria) this;
        }

        public Criteria andMissionIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("mission_id >=", value, "missionId");
            return (Criteria) this;
        }

        public Criteria andMissionIdLessThan(Integer value) {
            addCriterion("mission_id <", value, "missionId");
            return (Criteria) this;
        }

        public Criteria andMissionIdLessThanOrEqualTo(Integer value) {
            addCriterion("mission_id <=", value, "missionId");
            return (Criteria) this;
        }

        public Criteria andMissionIdIn(List<Integer> values) {
            addCriterion("mission_id in", values, "missionId");
            return (Criteria) this;
        }

        public Criteria andMissionIdNotIn(List<Integer> values) {
            addCriterion("mission_id not in", values, "missionId");
            return (Criteria) this;
        }

        public Criteria andMissionIdBetween(Integer value1, Integer value2) {
            addCriterion("mission_id between", value1, value2, "missionId");
            return (Criteria) this;
        }

        public Criteria andMissionIdNotBetween(Integer value1, Integer value2) {
            addCriterion("mission_id not between", value1, value2, "missionId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andTrialTIsNull() {
            addCriterion("trial_t is null");
            return (Criteria) this;
        }

        public Criteria andTrialTIsNotNull() {
            addCriterion("trial_t is not null");
            return (Criteria) this;
        }

        public Criteria andTrialTEqualTo(Date value) {
            addCriterion("trial_t =", value, "trialT");
            return (Criteria) this;
        }

        public Criteria andTrialTNotEqualTo(Date value) {
            addCriterion("trial_t <>", value, "trialT");
            return (Criteria) this;
        }

        public Criteria andTrialTGreaterThan(Date value) {
            addCriterion("trial_t >", value, "trialT");
            return (Criteria) this;
        }

        public Criteria andTrialTGreaterThanOrEqualTo(Date value) {
            addCriterion("trial_t >=", value, "trialT");
            return (Criteria) this;
        }

        public Criteria andTrialTLessThan(Date value) {
            addCriterion("trial_t <", value, "trialT");
            return (Criteria) this;
        }

        public Criteria andTrialTLessThanOrEqualTo(Date value) {
            addCriterion("trial_t <=", value, "trialT");
            return (Criteria) this;
        }

        public Criteria andTrialTIn(List<Date> values) {
            addCriterion("trial_t in", values, "trialT");
            return (Criteria) this;
        }

        public Criteria andTrialTNotIn(List<Date> values) {
            addCriterion("trial_t not in", values, "trialT");
            return (Criteria) this;
        }

        public Criteria andTrialTBetween(Date value1, Date value2) {
            addCriterion("trial_t between", value1, value2, "trialT");
            return (Criteria) this;
        }

        public Criteria andTrialTNotBetween(Date value1, Date value2) {
            addCriterion("trial_t not between", value1, value2, "trialT");
            return (Criteria) this;
        }

        public Criteria andAuditIdIsNull() {
            addCriterion("audit_id is null");
            return (Criteria) this;
        }

        public Criteria andAuditIdIsNotNull() {
            addCriterion("audit_id is not null");
            return (Criteria) this;
        }

        public Criteria andAuditIdEqualTo(String auditId,Integer value) {
            addCriterion("audit_id =", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdNotEqualTo(Integer value) {
            addCriterion("audit_id <>", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdGreaterThan(Integer value) {
            addCriterion("audit_id >", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("audit_id >=", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdLessThan(Integer value) {
            addCriterion("audit_id <", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdLessThanOrEqualTo(Integer value) {
            addCriterion("audit_id <=", value, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdIn(List<Integer> values) {
            addCriterion("audit_id in", values, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdNotIn(List<Integer> values) {
            addCriterion("audit_id not in", values, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdBetween(Integer value1, Integer value2) {
            addCriterion("audit_id between", value1, value2, "auditId");
            return (Criteria) this;
        }

        public Criteria andAuditIdNotBetween(Integer value1, Integer value2) {
            addCriterion("audit_id not between", value1, value2, "auditId");
            return (Criteria) this;
        }

        public Criteria andTrialTextIsNull() {
            addCriterion("trial_text is null");
            return (Criteria) this;
        }

        public Criteria andTrialTextIsNotNull() {
            addCriterion("trial_text is not null");
            return (Criteria) this;
        }

        public Criteria andTrialTextEqualTo(String value) {
            addCriterion("trial_text =", value, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextNotEqualTo(String value) {
            addCriterion("trial_text <>", value, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextGreaterThan(String value) {
            addCriterion("trial_text >", value, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextGreaterThanOrEqualTo(String value) {
            addCriterion("trial_text >=", value, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextLessThan(String value) {
            addCriterion("trial_text <", value, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextLessThanOrEqualTo(String value) {
            addCriterion("trial_text <=", value, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextLike(String value) {
            addCriterion("trial_text like", value, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextNotLike(String value) {
            addCriterion("trial_text not like", value, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextIn(List<String> values) {
            addCriterion("trial_text in", values, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextNotIn(List<String> values) {
            addCriterion("trial_text not in", values, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextBetween(String value1, String value2) {
            addCriterion("trial_text between", value1, value2, "trialText");
            return (Criteria) this;
        }

        public Criteria andTrialTextNotBetween(String value1, String value2) {
            addCriterion("trial_text not between", value1, value2, "trialText");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table trial_log
     *
     * @mbggenerated do_not_delete_during_merge Sat Jun 06 15:49:01 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table trial_log
     *
     * @mbggenerated Sat Jun 06 15:49:01 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}